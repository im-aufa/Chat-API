version: "3.8"
services:
  traefik:
    image: traefik:v3.1
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api.insecure=true" # Set to false later
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=im.aufa.ai@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    networks:
      - web

  portfolio:
    build:
      context: ./portfolio-site
      dockerfile: dockerfile
    environment:
      - API_KEY=${API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`aufaim.com`)"
      - "traefik.http.routers.portfolio.entrypoints=websecure"
      - "traefik.http.routers.portfolio.tls=true"
      - "traefik.http.routers.portfolio.tls.certresolver=le"
      - "traefik.http.services.portfolio.loadbalancer.server.port=80"
    restart: unless-stopped
    networks:
      - web

  chat-api:
    build: ./chat-api
    depends_on:
      - postgres
    volumes:
      - chat-api-data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-api.rule=Host(`api.aufaim.com`)"
      - "traefik.http.routers.chat-api.entrypoints=websecure"
      - "traefik.http.routers.chat-api.tls=true"
      - "traefik.http.routers.chat-api.tls.certresolver=le"
      - "traefik.http.services.chat-api.loadbalancer.server.port=8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_KEY=${API_KEY}
      - GOOGLE_DRIVE_FOLDER_ID=${GOOGLE_DRIVE_FOLDER_ID}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    restart: unless-stopped
    networks:
      - web

  postgres:
    image: pgvector/pgvector:pg16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: -c shared_buffers=64MB -c work_mem=2MB -c max_connections=20
    restart: unless-stopped
    networks:
      - web

volumes:
  letsencrypt:
  chat-api-data:
  postgres-data:


networks:
  web:
    driver: bridge
