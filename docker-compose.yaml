version: "3.8"
services:
  traefik:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/data
    command:
      - "--configFile=/data/traefik.yaml"
    restart: unless-stopped

  portfolio:
    build: ./portfolio-site
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`aufaim.com`)"
      - "traefik.http.routers.portfolio.entrypoints=websecure"
      - "traefik.http.routers.portfolio.tls=true"
      - "traefik.http.routers.portfolio.tls.certresolver=le"
      - "traefik.http.services.portfolio.loadbalancer.server.port=80"
    restart: unless-stopped

  chat-api:
    build: ./chat-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-api.rule=Host(`api.aufaim.com`)"
      - "traefik.http.routers.chat-api.entrypoints=websecure"
      - "traefik.http.routers.chat-api.tls=true"
      - "traefik.http.routers.chat-api.tls.certresolver=le"
      - "traefik.http.services.chat-api.loadbalancer.server.port=8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=aufaim
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=ai_db
    restart: unless-stopped

volumes:
  postgres-data:
