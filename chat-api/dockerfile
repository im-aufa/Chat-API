# ---- Stage 1: Builder ----
# This stage installs dependencies and builds wheels for them.
# It includes build-essential so we can compile C extensions.
FROM python:3.10 as builder

WORKDIR /app

# Install build tools
RUN apt-get update && apt-get install -y build-essential && rm -rf /var/lib/apt/lists/*

# Copy requirements and build wheels
COPY requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir=/app/wheels -r requirements.txt


# ---- Stage 2: Final Image ----
# This stage creates the final, small, and efficient image.
FROM python:3.10-slim

WORKDIR /app

# Copy the pre-built wheels from the builder stage
COPY --from=builder /app/wheels /wheels

# Install the packages from the local wheels. This doesn't require build tools.
RUN pip install --no-cache /wheels/*

# Copy the application code.
COPY app.py .
COPY auth.py .
COPY credentials.json .

EXPOSE 8000

# The CMD remains the same, using 1 worker is good for a low-memory server.
CMD ["gunicorn", "-w", "1", "-k", "uvicorn.workers.UvicornWorker", "--timeout", "120", "app:app", "--bind", "0.0.0.0:8000"]